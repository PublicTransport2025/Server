"""initial all logistic

Revision ID: a90c22f7a6ae
Revises: 
Create Date: 2025-04-11 17:10:10.608261

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a90c22f7a6ae'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('atps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('numbers', sa.String(), nullable=False),
    sa.Column('about', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('report', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numbers'),
    sa.UniqueConstraint('title')
    )
    op.create_table('charts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('lats', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.Column('lons', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tpus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('hash_pass', sa.String(), nullable=True),
    sa.Column('vkid', sa.String(), nullable=True),
    sa.Column('rang', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('info', sa.String(), nullable=True),
    sa.Column('stage', sa.Integer(), nullable=True),
    sa.Column('care', sa.Boolean(), nullable=True),
    sa.Column('atp_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['atp_id'], ['atps.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('about', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('stage', sa.Integer(), nullable=False),
    sa.Column('tpu_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tpu_id'], ['tpus.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sections',
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('stop_id', sa.Integer(), nullable=False),
    sa.Column('coef', sa.Float(), nullable=False),
    sa.Column('stage', sa.Integer(), nullable=True),
    sa.Column('load', sa.Integer(), nullable=True),
    sa.Column('chart_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chart_id'], ['charts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stop_id'], ['stops.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('route_id', 'order')
    )
    op.create_table('timetables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day', sa.Date(), nullable=True),
    sa.Column('start', sa.Time(), nullable=False),
    sa.Column('lap', sa.Time(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('traffics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day', sa.Date(), nullable=True),
    sa.Column('start', sa.Time(), nullable=False),
    sa.Column('end', sa.Time(), nullable=False),
    sa.Column('lap', sa.Time(), nullable=False),
    sa.Column('vehicles', sa.Integer(), nullable=True),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    op.execute('CREATE SEQUENCE atps_seq')
    op.execute('CREATE SEQUENCE stops_seq')
    op.execute('CREATE SEQUENCE tpus_seq')
    op.execute('CREATE SEQUENCE routes_seq')
    op.execute('CREATE SEQUENCE charts_seq')
    op.execute('CREATE SEQUENCE timetables_seq')
    op.execute('CREATE SEQUENCE traffic_seq')
    import os
    from dotenv import load_dotenv
    load_dotenv()
    vkid = os.getenv('ADMIN_VK')

    op.execute(
        sa.text("""INSERT INTO users (id, name, vkid, rang) VALUES ('00000000-0000-0000-0000-000000000001',
        'Driver', '""" + vkid + """', 99)""")
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('traffics')
    op.drop_table('timetables')
    op.drop_table('sections')
    op.drop_table('stops')
    op.drop_table('routes')
    op.drop_table('users')
    op.drop_table('tpus')
    op.drop_table('charts')
    op.drop_table('atps')
    # ### end Alembic commands ###
